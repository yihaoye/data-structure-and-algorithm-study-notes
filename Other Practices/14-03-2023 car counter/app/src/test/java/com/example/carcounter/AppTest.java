/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example.carcounter;

import com.example.carcounter.model.*;
import org.junit.Test;
import java.math.*;
import java.util.*;

import static org.junit.Assert.*;

public class AppTest {
    String curDir = System.getProperty("user.dir");
    long HALF_HOUR = 1800L;

    @Test public void appTestWithValidData() {
        String testFile = "/src/test/resources/txt/test.txt";
        App carCounter = new App();
        carCounter.processFile(curDir + testFile);
        List<TrafficRecord> mostCountRecords = carCounter.mostCountRecords(3);
        assertEquals(mostCountRecords.get(0).getStartTime().toString(), "2021-12-01T07:30");
        assertEquals(mostCountRecords.get(0).getCarNum(), 46);
        assertEquals(mostCountRecords.get(1).getStartTime().toString(), "2021-12-01T08:00");
        assertEquals(mostCountRecords.get(1).getCarNum(), 42);
        assertEquals(mostCountRecords.get(2).getStartTime().toString(), "2021-12-08T18:00");
        assertEquals(mostCountRecords.get(2).getCarNum(), 33);

        Map<String, Integer> dateCount = carCounter.getDateCount();
        assertEquals((int) dateCount.get("2021-12-01"), 179);
        assertEquals((int) dateCount.get("2021-12-05"), 81);
        assertEquals((int) dateCount.get("2021-12-08"), 134);
        assertEquals((int) dateCount.get("2021-12-09"), 4);

        assertEquals(carCounter.getTotalCount(), BigInteger.valueOf(398));
        assertEquals(carCounter.getLeastCount(HALF_HOUR * 3), 0); // HALF_HOUR * 3 - i.e. 3 contiguous half hour records
    }

    @Test public void appTestWithInvalidData() {
        String testFile = "/src/test/resources/txt/test_invalid_data.txt";
        App carCounter = new App();
        try {
            carCounter.processFile(curDir + testFile);
        } catch (Exception e) {
            assertEquals(e.getMessage(), "car number should not be negative.");
        }
    }

    @Test public void appTestWithEqualData() {
        String testFile = "/src/test/resources/txt/test_equal_data.txt";
        App carCounter = new App();
        carCounter.processFile(curDir + testFile);
        List<TrafficRecord> mostCountRecords = carCounter.mostCountRecords(3);
        assertEquals(mostCountRecords.get(0).getStartTime().toString(), "2021-12-01T05:00");
        assertEquals(mostCountRecords.get(0).getCarNum(), 100);
        assertEquals(mostCountRecords.get(1).getStartTime().toString(), "2021-12-02T07:30");
        assertEquals(mostCountRecords.get(1).getCarNum(), 100);
        assertEquals(mostCountRecords.get(2).getStartTime().toString(), "2021-12-03T06:00");
        assertEquals(mostCountRecords.get(2).getCarNum(), 100);

        assertEquals(carCounter.getLeastCount(HALF_HOUR * 3), 100);
    }

    @Test public void appTestWithLargeData() {
        String testFile = "/src/test/resources/txt/test_large_data.txt";
        App carCounter = new App();
        carCounter.processFile(curDir + testFile);

        assertEquals(carCounter.getTotalCount(), BigInteger.valueOf(2147483647).multiply(BigInteger.valueOf(5)));
        assertEquals(carCounter.getLeastCount(HALF_HOUR * 3), 2147483647);
    }
}
